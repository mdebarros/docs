/'*****
 License
 --------------
 Copyright Â© 2017 Bill & Melinda Gates Foundation
 The Mojaloop files are made available by the Bill & Melinda Gates Foundation under the Apache License, Version 2.0 (the "License") and you may not use these files except in compliance with the License. You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, the Mojaloop files are distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 Contributors
 --------------
 This is the official list of the Mojaloop project contributors for this file.
 Names of the original copyright holders (individuals or organizations)
 should be listed with a '*' in the first column. People who have
 contributed from an organization can be listed under the organization
 that actually holds the copyright for their contributions (see the
 Gates Foundation organization for an example). Those individuals should have
 their names indented and be marked with a '-'. Email address can be added
 optionally within square brackets <email>.
 * Gates Foundation
 - Name Surname <name.surname@gatesfoundation.com>

 * Georgi Georgiev <georgi.georgiev@modusbox.com>
 * Miguel de Barros <miguel.debarros@modusbox.com>
 --------------
 ******'/

@startuml
' declate title
title 1.1.3.a. Transfer Handler Consume (single message)

autonumber

' Actor Keys:
'   boundary - APIs/Interfaces, etc
'   collections - Kafka Topics
'   control - Kafka Consumers
'   entity - Database Access Objects
'   database - Database Persistance Store

' declare actors
collections "Transfer-Topic" as TOPIC_TRANSFERS
control "Transfer Event Handler" as TRANS_HANDLER
collections "Event-Topic" as TOPIC_EVENTS
collections "Notification-Topic" as TOPIC_NOTIFICATIONS
database "Central Store" as DB

box "Central Service" #LightYellow
    participant TOPIC_TRANSFERS
    participant TRANS_HANDLER
    participant TOPIC_EVENTS
    participant TOPIC_NOTIFICATIONS
    participant DB
end box

' start flow
activate TRANS_HANDLER
group Transfer Handler Consume
    TOPIC_TRANSFERS <- TRANS_HANDLER: Consume Transfer event
    activate TOPIC_TRANSFERS
    deactivate TOPIC_TRANSFERS

    break
        group Validate Event
            TRANS_HANDLER <-> TRANS_HANDLER: Validate event - Rule: type == 'transfer' && action == 'prepare'\n<color #FF0000><b>Error codes:</b> 2001</color>
        end
    end

    group Persist Event Information
        |||
        TRANS_HANDLER -> TOPIC_EVENTS: Publish event information
        ref over TRANS_HANDLER, TOPIC_EVENTS :  Event Handler Consume {[[https://github.com/mojaloop/docs/blob/master/CentralServices/seq_diagrams/seq-event-9.1.0.svg 9.1.0.]]} \n
        |||
    end

    note right of TRANS_HANDLER #yellow
        Message:
        {
            id: <transferMessage.transferId>
            from: <transferMessage.payerFsp>,
            to: <transferMessage.payeeFsp>,
            type: application/json
            content: {
                headers: <transferHeaders>,
                payload: <transferMessage>
            },
            metadata: {
                event: {
                    id: <uuid>,
                    responseTo: <previous.uuid>,
                    type: notification,
                    action: prepare,
                    createdAt: <timestamp>,
                    state: {
                        status: "success",
                        code: 0
                    }
                }
            }
        }
    end note
    TRANS_HANDLER -> TOPIC_NOTIFICATIONS: Publish Notification event for Payee\n<color #FF0000><b>Error codes:</b> 2003</color>
    activate TOPIC_NOTIFICATIONS
    deactivate TOPIC_NOTIFICATIONS
end
deactivate TRANS_HANDLER
@enduml
